countries <- countries[!(countries %in% c("ARG", "HKG", "TUR"))]
coefficients <- data.frame()
for (country in countries){
print(country)
country_data <- data %>%
filter(Country == country)
fit <- lm(stock_change ~ stringency_ra + services + polity + frac_DPI + human_development_index +
residential + urban_pop + oil_price + hospital_beds_per_thousand + new_cases_smoothed_per_million + retail_and_recreation + stimulus_spending_pct_gdp, data = country_data)
coeff <- tidy(fit) %>%
select(term, estimate) %>%
spread(term, estimate) %>%
mutate(region = country)
coefficients <- rbind(coefficients, coeff)
}
countries <- unique(data$Country)
countries <- countries[!(countries %in% c("HKG", "TUR"))]
coefficients <- data.frame()
for (country in countries){
print(country)
country_data <- data %>%
filter(Country == country)
fit <- lm(stock_change ~ stringency_ra + services + polity + frac_DPI + human_development_index +
residential + urban_pop + oil_price + hospital_beds_per_thousand + new_cases_smoothed_per_million + retail_and_recreation + stimulus_spending_pct_gdp, data = country_data)
coeff <- tidy(fit) %>%
select(term, estimate) %>%
spread(term, estimate) %>%
mutate(region = country)
coefficients <- rbind(coefficients, coeff)
}
for (country in countries){
print(country)
country_data <- data %>%
filter(Country == country)
summary(country_data)
fit <- lm(stock_change ~ stringency_ra + services + polity + frac_DPI + human_development_index +
residential + urban_pop + oil_price + hospital_beds_per_thousand + new_cases_smoothed_per_million + retail_and_recreation + stimulus_spending_pct_gdp, data = country_data)
coeff <- tidy(fit) %>%
select(term, estimate) %>%
spread(term, estimate) %>%
mutate(region = country)
coefficients <- rbind(coefficients, coeff)
}
countries <- unique(data$Country)
countries <- countries[!(countries %in% c("HKG", "TUR"))]
coefficients <- data.frame()
for (country in countries){
print(country)
country_data <- data %>%
filter(Country == country)
summary(country_data)
fit <- lm(stock_change ~ stringency_ra + services + polity + frac_DPI + human_development_index +
residential + urban_pop + oil_price + hospital_beds_per_thousand + new_cases_smoothed_per_million + retail_and_recreation + stimulus_spending_pct_gdp, data = country_data)
coeff <- tidy(fit) %>%
select(term, estimate) %>%
spread(term, estimate) %>%
mutate(region = country)
coefficients <- rbind(coefficients, coeff)
}
for (country in countries){
print(country)
country_data <- data %>%
filter(Country == country)
for(col in colnames(country_data)){
summary(country_data[col])
}
fit <- lm(stock_change ~ stringency_ra + services + polity + frac_DPI + human_development_index +
residential + urban_pop + oil_price + hospital_beds_per_thousand + new_cases_smoothed_per_million + retail_and_recreation + stimulus_spending_pct_gdp, data = country_data)
coeff <- tidy(fit) %>%
select(term, estimate) %>%
spread(term, estimate) %>%
mutate(region = country)
coefficients <- rbind(coefficients, coeff)
}
for (country in countries){
print(country)
country_data <- data %>%
filter(Country == country)
for(col in colnames(country_data)){
print(col)
summary(country_data[col])
}
fit <- lm(stock_change ~ stringency_ra + services + polity + frac_DPI + human_development_index +
residential + urban_pop + oil_price + hospital_beds_per_thousand + new_cases_smoothed_per_million + retail_and_recreation + stimulus_spending_pct_gdp, data = country_data)
coeff <- tidy(fit) %>%
select(term, estimate) %>%
spread(term, estimate) %>%
mutate(region = country)
coefficients <- rbind(coefficients, coeff)
}
for (country in countries){
print(country)
country_data <- data %>%
filter(Country == country)
for(col in colnames(country_data)){
view(summary(country_data[col]))
}
fit <- lm(stock_change ~ stringency_ra + services + polity + frac_DPI + human_development_index +
residential + urban_pop + oil_price + hospital_beds_per_thousand + new_cases_smoothed_per_million + retail_and_recreation + stimulus_spending_pct_gdp, data = country_data)
coeff <- tidy(fit) %>%
select(term, estimate) %>%
spread(term, estimate) %>%
mutate(region = country)
coefficients <- rbind(coefficients, coeff)
}
for (country in countries){
print(country)
country_data <- data %>%
filter(Country == country)
for(col in colnames(country_data)){
print(summary(country_data[col]))
}
fit <- lm(stock_change ~ stringency_ra + services + polity + frac_DPI + human_development_index +
residential + urban_pop + oil_price + hospital_beds_per_thousand + new_cases_smoothed_per_million + retail_and_recreation + stimulus_spending_pct_gdp, data = country_data)
coeff <- tidy(fit) %>%
select(term, estimate) %>%
spread(term, estimate) %>%
mutate(region = country)
coefficients <- rbind(coefficients, coeff)
}
for (country in countries){
print(country)
country_data <- data %>%
filter(Country == country) %>%
select(stringency_ra, services, polity ,frac_DPI, human_development_index,
residential, urban_pop,oil_price,hospital_beds_per_thousand, new_cases_smoothed_per_million ,retail_and_recreation, stimulus_spending_pct_gdp)
for(col in colnames(country_data)){
print(summary(country_data[col]))
}
fit <- lm(stock_change ~ stringency_ra + services + polity + frac_DPI + human_development_index +
residential + urban_pop + oil_price + hospital_beds_per_thousand + new_cases_smoothed_per_million + retail_and_recreation + stimulus_spending_pct_gdp, data = country_data)
coeff <- tidy(fit) %>%
select(term, estimate) %>%
spread(term, estimate) %>%
mutate(region = country)
coefficients <- rbind(coefficients, coeff)
}
for (country in countries){
print(country)
country_data <- data %>%
filter(Country == country) %>%
select(stock_change, stringency_ra, services, polity ,frac_DPI, human_development_index,
residential, urban_pop,oil_price,hospital_beds_per_thousand, new_cases_smoothed_per_million ,retail_and_recreation, stimulus_spending_pct_gdp)
for(col in colnames(country_data)){
print(summary(country_data[col]))
}
fit <- lm(stock_change ~ stringency_ra + services + polity + frac_DPI + human_development_index +
residential + urban_pop + oil_price + hospital_beds_per_thousand + new_cases_smoothed_per_million + retail_and_recreation + stimulus_spending_pct_gdp, data = country_data)
coeff <- tidy(fit) %>%
select(term, estimate) %>%
spread(term, estimate) %>%
mutate(region = country)
coefficients <- rbind(coefficients, coeff)
}
countries <- unique(data$Country)
countries <- countries[!(countries %in% c("HKG", "TUR"))]
coefficients <- data.frame()
for (country in countries){
print(country)
country_data <- data %>%
filter(Country == country) %>%
select(stock_change, stringency_ra, services, polity ,frac_DPI, human_development_index,
residential, urban_pop,oil_price,hospital_beds_per_thousand, new_cases_smoothed_per_million ,retail_and_recreation, stimulus_spending_pct_gdp)
for(col in colnames(country_data)){
print(summary(country_data[col]))
}
fit <- lm(stock_change ~ stringency_ra + services + polity + frac_DPI + human_development_index +
residential + urban_pop + oil_price + hospital_beds_per_thousand + new_cases_smoothed_per_million + retail_and_recreation + stimulus_spending_pct_gdp, data = country_data)
coeff <- tidy(fit) %>%
select(term, estimate) %>%
spread(term, estimate) %>%
mutate(region = country)
coefficients <- rbind(coefficients, coeff)
}
for (country in countries){
print(country)
country_data <- data %>%
filter(Country == country) %>%
select(stock_change, stringency_ra, services, polity ,frac_DPI, human_development_index,
residential, population_density, oil_price,hospital_beds_per_thousand, new_cases_smoothed_per_million ,retail_and_recreation, stimulus_spending_pct_gdp)
for(col in colnames(country_data)){
print(summary(country_data[col]))
}
fit <- lm(stock_change ~ stringency_ra + services + polity + frac_DPI + human_development_index +
residential + population_density + oil_price + hospital_beds_per_thousand + new_cases_smoothed_per_million + retail_and_recreation + stimulus_spending_pct_gdp, data = country_data)
coeff <- tidy(fit) %>%
select(term, estimate) %>%
spread(term, estimate) %>%
mutate(region = country)
coefficients <- rbind(coefficients, coeff)
}
for (country in countries){
print(country)
country_data <- data %>%
filter(Country == country) %>%
select(stock_change, stringency_ra, services, polity ,frac_DPI, human_development_index,
residential, population_density, oil_price,hospital_beds_per_thousand, new_cases_smoothed_per_million ,retail_and_recreation, stimulus_spending_pct_gdp)
for(col in colnames(country_data)){
print(summary(country_data[col]))
}
fit <- lm(stock_change ~ stringency_ra + polity + frac_DPI + human_development_index +
residential + population_density + oil_price + hospital_beds_per_thousand + new_cases_smoothed_per_million + retail_and_recreation + stimulus_spending_pct_gdp, data = country_data)
coeff <- tidy(fit) %>%
select(term, estimate) %>%
spread(term, estimate) %>%
mutate(region = country)
coefficients <- rbind(coefficients, coeff)
}
for (country in countries){
print(country)
country_data <- data %>%
filter(Country == country) %>%
select(stock_change, stringency_ra, services, polity ,frac_DPI, human_development_index,
residential, population_density, oil_price,hospital_beds_per_thousand, new_cases_smoothed_per_million ,retail_and_recreation, stimulus_spending_pct_gdp)
for(col in colnames(country_data)){
print(summary(country_data[col]))
}
fit <- lm(stock_change ~ stringency_ra + polity + frac_DPI + human_development_index + population_density + oil_price + hospital_beds_per_thousand + new_cases_smoothed_per_million  + stimulus_spending_pct_gdp, data = country_data)
coeff <- tidy(fit) %>%
select(term, estimate) %>%
spread(term, estimate) %>%
mutate(region = country)
coefficients <- rbind(coefficients, coeff)
}
countries <- unique(data$Country)
countries <- countries[!(countries %in% c("HKG", "TUR"))]
coefficients <- data.frame()
for (country in countries){
print(country)
country_data <- data %>%
filter(Country == country) %>%
select(stock_change, stringency_ra, services, polity ,frac_DPI, human_development_index,
residential, population_density, oil_price,hospital_beds_per_thousand, new_cases_smoothed_per_million ,retail_and_recreation, stimulus_spending_pct_gdp)
for(col in colnames(country_data)){
print(summary(country_data[col]))
}
fit <- lm(stock_change ~ stringency_ra + polity + frac_DPI + human_development_index + population_density + oil_price + hospital_beds_per_thousand + new_cases_smoothed_per_million  + stimulus_spending_pct_gdp, data = country_data)
coeff <- tidy(fit) %>%
select(term, estimate) %>%
spread(term, estimate) %>%
mutate(region = country)
coefficients <- rbind(coefficients, coeff)
}
world_map <- map_data("world") %>%
mutate(region = countrycode(region, origin = 'country.name', destination = 'iso3c') )
coeff_map <- left_join(world_map,coefficients, by = "region")
coeff_list <- colnames(coefficients)
coeff_list <- coeff_list[!(coeff_list %in% c("(Intercept)", "region"))]
ggplot(coeff_map, aes(x = long, y = lat, group = group)) +
geom_polygon(aes(fill=stringency_ra), colour = "white") +
scale_fill_viridis_c(option = "C", na.value = "lightgray")
theme_set(t9theme)
ggplot(coeff_map, aes(x = long, y = lat, group = group)) +
geom_polygon(aes(fill=stringency_ra), colour = "white") +
scale_fill_viridis_c(option = "C", na.value = "lightgray")
theme_set(theme_void())
ggplot(coeff_map, aes(x = long, y = lat, group = group)) +
geom_polygon(aes(fill=stringency_ra), colour = "white") +
scale_fill_viridis_c(option = "C", na.value = "lightgray")
ggsave("./plots/stringency_ra_map.pdf", width=11, height=8.5, units="in")
ggsave("./plots/stringency_ra_map.png", width=11, height=8.5, units="in")
install.packages("rworldmap")
theme_set(theme_void())
library(rworldmap)
# get world map
wmap <- getMap(resolution="low")
View(wmap)
ggplot(coeff_map, aes(x = long, y = lat, group = group)) +
geom_polygon(aes(fill=stringency_ra), colour = "white") +
scale_fill_viridis_c(option = "C", na.value = "lightgray")
ggplot(coeff_map, aes(x = long, y = lat, group = group)) +
geom_polygon(aes(fill=stringency_ra), colour = "white") +
scale_fill_viridis_c(option = "C", na.value = "lightgray") +
labs(fill="Stringency Coefficient")
ggsave("./plots/stringency_ra_map.pdf", width=11, height=8.5, units="in")
ggplot(coeff_map, aes(x = long, y = lat, group = group)) +
geom_polygon(aes(fill=stringency_ra), colour = "white") +
scale_fill_viridis_c(option = "C", na.value = "lightgray") +
labs(fill="Stringency Coefficient", title = "Regression Coefficient on Independent Variable by Country", subtitle = "IVis a 7-day rolling average of Oxford's government stringency index")
ggsave("./plots/stringency_ra_map.pdf", width=11, height=8.5, units="in")
ggplot(coeff_map, aes(x = long, y = lat, group = group)) +
geom_polygon(aes(fill=stringency_ra), colour = "white") +
scale_fill_viridis_c(option = "C", na.value = "lightgray") +
theme(plot.margin=unit(c(1,1,1.5,1.2),"cm")) +
labs(fill="Stringency Coefficient", title = "Regression Coefficient on Independent Variable by Country", subtitle = "IV is a 7-day rolling average of Oxford's government stringency index")
ggplot(coeff_map, aes(x = long, y = lat, group = group)) +
geom_polygon(aes(fill=stringency_ra), colour = "white") +
scale_fill_viridis_c(option = "C", na.value = "lightgray") +
theme(plot.margin=unit(c(.5,.5,5,.5),"cm")) +
labs(fill="Stringency Coefficient", title = "Regression Coefficient on Independent Variable by Country", subtitle = "IV is a 7-day rolling average of Oxford's government stringency index")
ggplot(coeff_map, aes(x = long, y = lat, group = group)) +
geom_polygon(aes(fill=stringency_ra), colour = "white") +
scale_fill_viridis_c(option = "C", na.value = "lightgray") +
theme(plot.margin=unit(c(.5,.5,.5,.5),"cm")) +
labs(fill="Stringency Coefficient", title = "Regression Coefficient on Independent Variable by Country", subtitle = "IV is a 7-day rolling average of Oxford's government stringency index")
ggsave("./plots/stringency_ra_map.pdf", width=11, height=8.5, units="in")
ggsave("./plots/stringency_ra_map.png", width=11, height=8.5, units="in")
ggplot(coeff_map, aes(x = long, y = lat, group = group)) +
geom_polygon(aes(fill=stringency_ra), colour = "white") +
scale_fill_continuous( low="#CAD7EB", high="#042E6E",
guide="colorbar",na.value="gray99") +
# scale_fill_viridis_c(option = "C", na.value = "lightgray") +
theme(plot.margin=unit(c(.5,.5,.5,.5),"cm")) +
labs(fill="Stringency Coefficient", title = "Regression Coefficient on Independent Variable by Country", subtitle = "IV is a 7-day rolling average of Oxford's government stringency index")
ggplot(coeff_map, aes(x = long, y = lat, group = group)) +
geom_polygon(aes(fill=stringency_ra), colour = "white") +
scale_fill_continuous( low="#CAD7EB", high="#042E6E", guide="colorbar", na.value="lightgray") +
# scale_fill_viridis_c(option = "C", na.value = "lightgray") +
theme(plot.margin=unit(c(.5,.5,.5,.5),"cm")) +
labs(fill="Stringency Coefficient", title = "Regression Coefficient on Independent Variable by Country", subtitle = "IV is a 7-day rolling average of Oxford's government stringency index")
ggsave("./plots/stringency_ra_map.pdf", width=11, height=8.5, units="in")
ggsave("./plots/stringency_ra_map.png", width=11, height=8.5, units="in")
data <- read.csv(file = "./data/all_data.csv", stringsAsFactors = FALSE)
data <- japply( data, which(sapply(data, typeof)=="integer"), as.double )
data <- data %>%
filter(Date < "2021-01-01")
summary(data$stock_change)
data <- data %>%
arrange(Country, Date) %>%
filter(!is.na(stock_change))
med.fit <- lm(stringency_ra ~ services + polity + frac_DPI + human_development_index +
residential + urban_pop + oil_price + hospital_beds_per_thousand + new_cases_smoothed_per_million + retail_and_recreation + stimulus_spending_pct_gdp, data = data)
summary(med.fit)
out.fit <- lm(stock_change ~ stringency_ra + services + polity + frac_DPI + human_development_index +
residential + urban_pop + oil_price + hospital_beds_per_thousand + new_cases_smoothed_per_million + retail_and_recreation + stimulus_spending_pct_gdp, data = data)
summary(out.fit)
med.out <- mediate(med.fit, out.fit, treat = "new_cases_smoothed_per_million", mediator = "stringency_ra", sims = 300, boot = TRUE)
med.out <- mediate(med.fit, out.fit, treat = "new_cases_smoothed_per_million", mediator = "stringency_ra", sims = 1000, boot = TRUE)
summary(med.out)
png("./plots/mediator_output.png")
plot(med.out)
dev.off()
summary(med.out)
png("./plots/mediator_output.png", width=7, height=7, units="in")
summary(med.out)
png("./plots/mediator_output.png", width=480, height=480)
plot(med.out)
dev.off()
png("./plots/mediator_output.png", width=800, height=800)
plot(med.out)
dev.off()
png("./plots/mediator_output.png", width=600, height=600)
plot(med.out)
dev.off()
png("./plots/mediator_output.png", width=500, height=500)
plot(med.out)
dev.off()
sens <- medsens(med.out)
png("./plots/sens_output_1.png", width=500, height=500)
plot(sens)
dev.off()
png("./plots/sens_output_1.png", width=500, height=500)
plot(sens, sens.par = "R2", r.type = "total", sign.prod = "positive")
dev.off()
png("./plots/sens_output_1.png", width=500, height=500)
plot(sens)
dev.off()
png("./plots/sens_output_2.png", width=500, height=500)
plot(sens, sens.par = "R2", r.type = "total", sign.prod = "positive")
dev.off()
library(dagr)
install.packages("dagR")
library(dagR)
covid_dag <- dagify(economics ~  compliance + economic_relief + politics + other_econ + covid_rates + lockdown_policy,
compliance ~ covid_rates + demographics + politics,
economic_relief ~ politics,
lockdown_policy ~ covid_rates + politics,
covid_rates ~ healthcare,
healthcare ~ politics,
labels = c("economics" = "Economic\n Effects",
"other_econ" = "Other\n Economic\n Factors",
"lockdown_policy" = "Lockdown\n Policy",
"compliance" = "Citizen\n Activity",
"oil_price" = "Oil Prices",
"labor_demand" = "Demand for\n Labor",
"economic_relief" ="Provided\n Economic\n Aid",
"stimulus" = "Provided\n Economic\n Stimulus",
"welfare" = "Welfare\n Spending",
"covid_rates" = "COVID Rates",
"demographics" = "Country\n Demographics",
"politics" = "Political\n Factors",
"unified" = "Political\n Unification",
"coalition" = "Political\n Coalition",
"polarization" = "Political\n Polarization",
"trade" = "Economic\n Reliance on\n Trade",
"vaccine" = "Distribution\n and Efficacy\n of Vaccines",
"accessibility" = "Accessibility\n of Healthcare",
"economic_composition" = "Economic\n Composition",
"volatility" = "Price Volatility",
"healthcare" = "Quality of\n Healthcare"
),
exposure ="lockdown_policy",
latent = c(),
outcome = "economics"
)
covid_dag %>%
ggdag() +
theme_dag()
dag.move(covid_dag)
covid_dag %>%
ggdag() +
theme_dag()
tidycase <- covid_dag %>%
tidy_dagitty(); tidycase
final_dag = tidycase %>%
mutate(linetype = ifelse(direction == "<->", "dashed", "solid")) %>%
mutate(class = "exogenous") %>%
mutate(class = ifelse(name %in% c("lockdown_policy"), "exposure", class)) %>%
mutate(class = ifelse(name %in% c("lockdown_efficacy"), "latent", class)) %>%
mutate(class = ifelse(name %in% c("economics"), "outcome", class)) %>%
mutate(new_label = label)
for(l in 2:length(final_dag[["data"]][["label"]])-1){
print(l)
label = final_dag[["data"]][["label"]][l]
if(label %in% final_dag[["data"]][["label"]][1:l-1]){
final_dag[["data"]][["new_label"]][l] = NA
}
}
final_dag %>%
ggplot(aes(x = x, y = y, xend = xend, yend = yend)) +
geom_dag_point(aes(color = class)) +
geom_dag_edges(aes(edge_linetype = linetype),
show.legend = FALSE) +
geom_label_repel(aes(label=new_label),
box.padding   = 1,
segment.color = 'grey50',
max.overlaps = 20) +
theme_dag()
dag.move(final_dag)
library(ggdag)
library(tidyverse)
library(ggrepel)
covid_dag <- dagify(economics ~  compliance + economic_relief + politics + other_econ + covid_rates + lockdown_policy,
compliance ~ covid_rates + demographics + politics,
economic_relief ~ politics,
lockdown_policy ~ covid_rates + politics,
covid_rates ~ healthcare,
healthcare ~ politics,
labels = c("economics" = "Economic\n Effects",
"other_econ" = "Other\n Economic\n Factors",
"lockdown_policy" = "Lockdown\n Policy",
"compliance" = "Citizen\n Activity",
"oil_price" = "Oil Prices",
"labor_demand" = "Demand for\n Labor",
"economic_relief" ="Provided\n Economic\n Aid",
"stimulus" = "Provided\n Economic\n Stimulus",
"welfare" = "Welfare\n Spending",
"covid_rates" = "COVID Rates",
"demographics" = "Country\n Demographics",
"politics" = "Political\n Factors",
"unified" = "Political\n Unification",
"coalition" = "Political\n Coalition",
"polarization" = "Political\n Polarization",
"trade" = "Economic\n Reliance on\n Trade",
"vaccine" = "Distribution\n and Efficacy\n of Vaccines",
"accessibility" = "Accessibility\n of Healthcare",
"economic_composition" = "Economic\n Composition",
"volatility" = "Price Volatility",
"healthcare" = "Quality of\n Healthcare"
),
exposure ="lockdown_policy",
latent = c(),
outcome = "economics"
)
covid_dag %>%
ggdag() +
theme_dag()
tidycase <- covid_dag %>%
tidy_dagitty(); tidycase
final_dag = tidycase %>%
mutate(linetype = ifelse(direction == "<->", "dashed", "solid")) %>%
mutate(class = "exogenous") %>%
mutate(class = ifelse(name %in% c("lockdown_policy"), "exposure", class)) %>%
mutate(class = ifelse(name %in% c("lockdown_efficacy"), "latent", class)) %>%
mutate(class = ifelse(name %in% c("economics"), "outcome", class)) %>%
mutate(new_label = label)
for(l in 2:length(final_dag[["data"]][["label"]])-1){
print(l)
label = final_dag[["data"]][["label"]][l]
if(label %in% final_dag[["data"]][["label"]][1:l-1]){
final_dag[["data"]][["new_label"]][l] = NA
}
}
final_dag %>%
ggplot(aes(x = x, y = y, xend = xend, yend = yend)) +
geom_dag_point(aes(color = class)) +
geom_dag_edges(aes(edge_linetype = linetype),
show.legend = FALSE) +
geom_label_repel(aes(label=new_label),
box.padding   = 1,
segment.color = 'grey50',
max.overlaps = 20) +
theme_dag()
View(coefficients)
best_fit <- lm(stock_change ~ stringency_ra + services + polity + frac_DPI + human_development_index +
residential + urban_pop + oil_price + hospital_beds_per_thousand + new_cases_smoothed_per_million + retail_and_recreation + stimulus_spending_pct_gdp, data = data)
summary(best_fit)
data <- read.csv(file = "./data/all_data.csv", stringsAsFactors = FALSE)
data <- japply( data, which(sapply(data, typeof)=="integer"), as.double )
data <- data %>%
filter(Date < "2021-01-01")
summary(data$stock_change)
data <- data %>%
arrange(Country, Date) %>%
filter(!is.na(stock_change))
med.fit <- lm(stringency_ra ~ services + polity + frac_DPI + human_development_index +
residential + urban_pop + oil_price + hospital_beds_per_thousand + new_cases_smoothed_per_million + retail_and_recreation + stimulus_spending_pct_gdp, data = data)
summary(med.fit)
out.fit <- lm(stock_change ~ stringency_ra + services + polity + frac_DPI + human_development_index +
residential + urban_pop + oil_price + hospital_beds_per_thousand + new_cases_smoothed_per_million + retail_and_recreation + stimulus_spending_pct_gdp, data = data)
summary(out.fit)
med.out <- mediate(med.fit, out.fit, treat = "new_cases_smoothed_per_million", mediator = "stringency_ra", sims = 1000, boot = TRUE)
summary(med.out)
