population_density_log
, data=data)
summary(re_fit)
re_fit <- lmer(stock_change ~ stringency_ra +
(1 | Country) +
agriculture +
industry +
manufacturing +
services +
frac_DPI +
aged_65_older +
new_cases_smoothed_per_million +
new_deaths_smoothed_per_million +
human_development_index +
retail_and_recreation +
residential +
oil_price +
stimulus_spending_pct_gdp +
health_spending_pct_gdp +
new_vaccinations_smoothed_per_million +
gdp_per_capita_log +
polity +
hospital_beds_per_thousand +
population_density_log
, data=data)
re_fit <- lmer(stock_change ~ stringency_ra +
(1 | Country) +
agriculture +
industry +
manufacturing +
services +
frac_DPI +
aged_65_older +
new_cases_smoothed_per_million +
new_deaths_smoothed_per_million +
human_development_index +
retail_and_recreation +
residential +
oil_price +
stimulus_spending_pct_gdp +
health_spending_pct_gdp +
new_vaccinations_smoothed_per_million +
log(gdp_per_capita) +
polity +
hospital_beds_per_thousand +
population_density_log
, data=data)
summary(re_fit)
library(lme4)
library(tidyverse)
data <- read.csv(file = "./data/all_data.csv", stringsAsFactors = FALSE)
fit_re <- lmer(stock_change ~ stringency_ra +
(1 | Country) +
agriculture +
industry +
manufacturing +
services +
frac_DPI +
aged_65_older +
new_cases_smoothed_per_million +
new_deaths_smoothed_per_million +
human_development_index +
retail_and_recreation +
residential +
oil_price +
stimulus_spending_pct_gdp +
health_spending_pct_gdp +
new_vaccinations_smoothed_per_million +
gdp_per_capita +
polity +
hospital_beds_per_thousand +
population_density_log
, data=data)
names(coef(fit_re)$Country) <- c("Intercept",
"Lockdown Severity",
"Agriculture Sector Share of GDP",
"Industry Sector Share of GDP",
"Manufacturing Sector Share of GDP",
"Service Sector Share of GDP",
"Political Fractionalization Index",
"Share of Population Older Than 65",
"New COVID-19 Cases Per Million People",
"New COVID-19 Deaths Per Million People",
"Human Development Index",
"Retail and Recreational Mobility",
"Residential Mobility",
"Oil Spot Price",
"Total Stimulus Spending as % of GDP",
"Healthcare Spending as % of GDP",
"New COVID-19 Vaccinations Per Million People",
"GDP Per Capita (Log)",
"Polity Score",
"Hospital Beds per 1000 People",
"Population Density (Log)")
summary(fit_re)
library(lme4)
library(tidyverse)
data <- read.csv(file = "./data/all_data.csv", stringsAsFactors = FALSE)
fit_re <- lmer(stock_change ~ stringency_ra +
(1 | Country) +
agriculture +
industry +
manufacturing +
services +
frac_DPI +
aged_65_older +
new_cases_smoothed_per_million +
new_deaths_smoothed_per_million +
human_development_index +
retail_and_recreation +
residential +
oil_price +
stimulus_spending_pct_gdp +
health_spending_pct_gdp +
new_vaccinations_smoothed_per_million +
gdp_per_capita +
polity +
hospital_beds_per_thousand +
population_density_log
, data=data)
names(coef(fit_re)$Country) <- c("Intercept",
"Lockdown Severity",
"Agriculture Sector Share of GDP",
"Industry Sector Share of GDP",
"Manufacturing Sector Share of GDP",
"Service Sector Share of GDP",
"Political Fractionalization Index",
"Share of Population Older Than 65",
"New COVID-19 Cases Per Million People",
"New COVID-19 Deaths Per Million People",
"Human Development Index",
"Retail and Recreational Mobility",
"Residential Mobility",
"Oil Spot Price",
"Total Stimulus Spending as % of GDP",
"Healthcare Spending as % of GDP",
"New COVID-19 Vaccinations Per Million People",
"GDP Per Capita (Log)",
"Polity Score",
"Hospital Beds per 1000 People",
"Population Density (Log)")
summary(fit_re)
data <- japply( data, which(sapply(data, typeof)=="integer"), as.double ) # convert data type to double to enable regression
data <- read.csv(file = "./data/all_data.csv", stringsAsFactors = FALSE)
data <- japply( data, which(sapply(data, typeof)=="integer"), as.double ) # convert data type to double to enable regression
fit <- lm(stock_change ~ stringency_ra +
agriculture +
industry +
manufacturing +
services +
frac_DPI +
aged_65_older +
new_cases_smoothed_per_million +
new_deaths_smoothed_per_million +
human_development_index +
retail_and_recreation +
residential +
oil_price +
stimulus_spending_pct_gdp +
health_spending_pct_gdp +
new_vaccinations_smoothed_per_million +
gdp_per_capita +
polity +
hospital_beds_per_thousand +
population_density_log
, data=data)
## Clean regression coefficient names
names(fit$coefficients) <- c("Intercept",
"Lockdown Severity",
"Agriculture Sector Share of GDP",
"Industry Sector Share of GDP",
"Manufacturing Sector Share of GDP",
"Service Sector Share of GDP",
"Political Fractionalization Index",
"Share of Population Older Than 65",
"New COVID-19 Cases Per Million People",
"New COVID-19 Deaths Per Million People",
"Human Development Index",
"Retail and Recreational Mobility",
"Residential Mobility",
"Oil Spot Price",
"Total Stimulus Spending as % of GDP",
"Healthcare Spending as % of GDP",
"New COVID-19 Vaccinations Per Million People",
"GDP Per Capita",
"Polity Score",
"Hospital Beds per 1000 People",
"Population Density (Log)")
summary(fit)
norm_data <- normalize(data, method = "standardize")
norm_fit <- lm(stock_change ~ stringency_ra +
agriculture +
industry +
manufacturing +
services +
frac_DPI +
aged_65_older +
new_cases_smoothed_per_million +
new_deaths_smoothed_per_million +
human_development_index +
retail_and_recreation +
residential +
oil_price +
stimulus_spending_pct_gdp +
health_spending_pct_gdp +
new_vaccinations_smoothed_per_million +
gdp_per_capita +
polity +
hospital_beds_per_thousand +
population_density_log
, data=norm_data)
names(norm_fit$coefficients) <- c("Intercept",
"Lockdown Severity",
"Agriculture Sector Share of GDP",
"Industry Sector Share of GDP",
"Manufacturing Sector Share of GDP",
"Service Sector Share of GDP",
"Political Fractionalization Index",
"Share of Population Older Than 65",
"New COVID-19 Cases Per Million People",
"New COVID-19 Deaths Per Million People",
"Human Development Index",
"Retail and Recreational Mobility",
"Residential Mobility",
"Oil Spot Price",
"Total Stimulus Spending as % of GDP",
"Healthcare Spending as % of GDP",
"New COVID-19 Vaccinations Per Million People",
"GDP Per Capita",
"Polity Score",
"Hospital Beds per 1000 People",
"Population Density (Log)")
summary(norm_fit)
norm_data <- normalize(data, method = "standardize")
norm_fit <- lm(stock_change ~ stringency_ra +
agriculture +
industry +
manufacturing +
services +
frac_DPI +
aged_65_older +
new_cases_smoothed_per_million +
new_deaths_smoothed_per_million +
human_development_index +
retail_and_recreation +
residential +
oil_price +
stimulus_spending_pct_gdp +
health_spending_pct_gdp +
new_vaccinations_smoothed_per_million +
gdp_per_capita +
polity +
hospital_beds_per_thousand +
population_density_log
, data=norm_data)
names(norm_fit$coefficients) <- c("Intercept",
"Lockdown Severity",
"Agriculture Sector Share of GDP",
"Industry Sector Share of GDP",
"Manufacturing Sector Share of GDP",
"Service Sector Share of GDP",
"Political Fractionalization Index",
"Share of Population Older Than 65",
"New COVID-19 Cases Per Million People",
"New COVID-19 Deaths Per Million People",
"Human Development Index",
"Retail and Recreational Mobility",
"Residential Mobility",
"Oil Spot Price",
"Total Stimulus Spending as % of GDP",
"Healthcare Spending as % of GDP",
"New COVID-19 Vaccinations Per Million People",
"GDP Per Capita",
"Polity Score",
"Hospital Beds per 1000 People",
"Population Density (Log)")
summary(norm_fit)
data <- read.csv(file = "./data/all_data.csv", stringsAsFactors = FALSE)
data <- japply( data, which(sapply(data, typeof)=="integer"), as.double ) # convert data type to double to enable regression
fit <- lm(stock_change ~ stringency_ra +
agriculture +
industry +
manufacturing +
services +
frac_DPI +
aged_65_older +
new_cases_smoothed_per_million +
new_deaths_smoothed_per_million +
human_development_index +
retail_and_recreation +
residential +
oil_price +
stimulus_spending_pct_gdp +
health_spending_pct_gdp +
new_vaccinations_smoothed_per_million +
gdp_per_capita +
polity +
hospital_beds_per_thousand +
population_density_log
, data=data)
## Clean regression coefficient names
names(fit$coefficients) <- c("Intercept",
"Lockdown Severity",
"Agriculture Sector Share of GDP",
"Industry Sector Share of GDP",
"Manufacturing Sector Share of GDP",
"Service Sector Share of GDP",
"Political Fractionalization Index",
"Share of Population Older Than 65",
"New COVID-19 Cases Per Million People",
"New COVID-19 Deaths Per Million People",
"Human Development Index",
"Retail and Recreational Mobility",
"Residential Mobility",
"Oil Spot Price",
"Total Stimulus Spending as % of GDP",
"Healthcare Spending as % of GDP",
"New COVID-19 Vaccinations Per Million People",
"GDP Per Capita",
"Polity Score",
"Hospital Beds per 1000 People",
"Population Density (Log)")
summary(fit)
xtable(summary(fit))
norm_data <- normalize(data, method = "standardize")
norm_fit <- lm(stock_change ~ stringency_ra +
agriculture +
industry +
manufacturing +
services +
frac_DPI +
aged_65_older +
new_cases_smoothed_per_million +
new_deaths_smoothed_per_million +
human_development_index +
retail_and_recreation +
residential +
oil_price +
stimulus_spending_pct_gdp +
health_spending_pct_gdp +
new_vaccinations_smoothed_per_million +
gdp_per_capita +
polity +
hospital_beds_per_thousand +
population_density_log
, data=norm_data)
names(norm_fit$coefficients) <- c("Intercept",
"Lockdown Severity",
"Agriculture Sector Share of GDP",
"Industry Sector Share of GDP",
"Manufacturing Sector Share of GDP",
"Service Sector Share of GDP",
"Political Fractionalization Index",
"Share of Population Older Than 65",
"New COVID-19 Cases Per Million People",
"New COVID-19 Deaths Per Million People",
"Human Development Index",
"Retail and Recreational Mobility",
"Residential Mobility",
"Oil Spot Price",
"Total Stimulus Spending as % of GDP",
"Healthcare Spending as % of GDP",
"New COVID-19 Vaccinations Per Million People",
"GDP Per Capita",
"Polity Score",
"Hospital Beds per 1000 People",
"Population Density (Log)")
summary(norm_fit)
norm_fit <- lm(stock_change ~ stringency_ra +
agriculture +
industry +
manufacturing +
services +
frac_DPI +
aged_65_older +
new_cases_smoothed_per_million +
new_deaths_smoothed_per_million +
human_development_index +
retail_and_recreation +
residential +
oil_price +
stimulus_spending_pct_gdp +
health_spending_pct_gdp +
new_vaccinations_smoothed_per_million +
gdp_per_capita +
polity +
hospital_beds_per_thousand +
population_density_log
, data=norm_data)
summary(norm_fit)
fit <- lm(stock_change ~ stringency_ra +
agriculture +
industry +
manufacturing +
services +
frac_DPI +
aged_65_older +
new_cases_smoothed_per_million +
new_deaths_smoothed_per_million +
human_development_index +
retail_and_recreation +
residential +
oil_price +
stimulus_spending_pct_gdp +
health_spending_pct_gdp +
new_vaccinations_smoothed_per_million +
gdp_per_capita +
polity +
hospital_beds_per_thousand +
population_density_log
, data=data)
summary(fit)
re_fit <- lmer(stock_change ~ stringency_ra +
(1 | Country) +
agriculture +
industry +
manufacturing +
services +
frac_DPI +
aged_65_older +
new_cases_smoothed_per_million +
new_deaths_smoothed_per_million +
human_development_index +
retail_and_recreation +
residential +
oil_price +
stimulus_spending_pct_gdp +
health_spending_pct_gdp +
new_vaccinations_smoothed_per_million +
log(gdp_per_capita) +
polity +
hospital_beds_per_thousand +
population_density_log
, data=data)
summary(re_fit)
source('~/Desktop/QSSProject/QSS82-Team9/scripts/Lockdown_Map_Visualization.R', echo=TRUE)
source('~/Desktop/QSSProject/QSS82-Team9/scripts/Lockdown_Map_Visualization.R', echo=TRUE)
View(spread_data)
source('~/Desktop/QSSProject/QSS82-Team9/scripts/Lockdown_Map_Visualization.R', echo=TRUE)
View(types_df)
stocks <- stock_data %>%
filter(Date >= "2020-01-01" & Date < "2021-03-09") %>% # filter for relevant dates
stocks$Close <- as.numeric(stocks$Close) # convert to double
stocks <- stock_data %>%
filter(Date >= "2020-01-01" & Date < "2021-03-09") %>% # filter for relevant dates
stocks$Close <- as.numeric(stocks$Close) # convert to double
stocks <- stock_data %>%
filter(Date >= "2020-01-01" & Date < "2021-03-09") %>% # filter for relevant dates
stocks$Close <- as.numeric(stocks$Close) # convert to double
stocks <- stock_data %>%
filter(Date >= "2020-01-01" & Date < "2021-03-09") %>% # filter for relevant dates
stocks$Close <- as.numeric(stocks$Close) # convert to double
stocks <- stock_data %>%
filter(Date >= "2020-01-01" & Date < "2021-03-09") %>% # filter for relevant dates
stocks$Close <- as.numeric(stocks$Close) # convert to double
source('~/Desktop/QSSProject/QSS82-Team9/scripts/Lockdown_Map_Visualization.R', echo=TRUE)
wmap <- getMap(resolution="low")
wmap <- spTransform(wmap, CRS("+proj=robin")) # reproject
wmap <-   subset(wmap, !(NAME %like% "Antar")) # Remove Antarctica
stocks <- stock_data %>%
filter(Date >= "2020-01-01" & Date < "2021-03-09") %>% # filter for relevant dates
stocks$Close <- as.numeric(stocks$Close) # convert to double
wmap <- getMap(resolution="low")
wmap <- spTransform(wmap, CRS("+proj=robin")) # reproject
wmap <-   subset(wmap, !(NAME %like% "Antar")) # Remove Antarctica
stocks <- stock_data %>%
filter(Date >= "2020-01-01" & Date < "2021-03-09") # filter for relevant dates
stocks$Close <- as.numeric(stocks$Close) # convert to double
stocks <- stocks %>%
group_by(Country) %>%
rename(country_iso3c = Country) %>%
mutate(first_stock_close = Close[which(!is.na(Close))[1]]) %>%
mutate(change_since_first = Close - first_stock_close)
centroids <- gCentroid( wmap , byid=TRUE, id = wmap@data$ISO3)
centroids <- data.frame(centroids)
setDT(centroids, keep.rownames = TRUE)[]
setnames(centroids, "rn", "country_iso3c")
wmap_df <- fortify(wmap, region = "ISO3")
wmap_df <- left_join(wmap_df, stocks, by = c('id'='country_iso3c'))        # data
wmap_df <- left_join(wmap_df, centroids, by = c('id'='country_iso3c')) # centroids
o <- ggplot(data=wmap_df) +
geom_polygon(aes(x = long, y = lat, group = group, fill=change_since_first, frame = Date), color="gray90") +
geom_text(aes(x = x, y = y, label = round(change_since_first), frame = Date), hjust=0, vjust=0, size = 4.5) +
scale_fill_viridis(name="Stock Change", begin = 0, end = 1, limits = c(0,1000000), na.value="gray99") +
theme_void() +
guides(fill = guide_colorbar(title.position = "top")) +
labs(title = "Stock Change, ") +
theme(plot.title = element_text(hjust = 0.5, vjust = 0.05, size=25)) +
theme(plot.caption = element_text(hjust = 0, color="gray40", size=15)) +
coord_cartesian(xlim = c(-11807982, 14807978)) +
theme( legend.position = c(.5, .08),
legend.direction = "horizontal",
legend.title.align = 0,
legend.key.size = unit(1.3, "cm"),
legend.title=element_text(size=17),
legend.text=element_text(size=13) )
gg_animate(o, "stock_map_final.gif", title_frame =T,
ani.width=1600, ani.height=820, dpi=800, interval = .1)
xtable(stargazer(summary(fit)))
stargazer(summary(fit))
stargazer(fit)
View(stock_data)
library(stargazer)
stargazer(stock_data)
test <- stock_data %>%
filter(Close)
library(dplyr)
test <- stock_data %>%
filter(Close)
test <- stock_data %>%
select(Close)
stargazer(stock_data)
