## removed due to incomplete data
data <- data %>%
filter(!Country %in% c("ARG", "CAN", "PER", "SGP"))
countries <- unique(data$Country)
coefficients <- data.frame()
for (country in countries){
print(country)
country_data <- data %>%
filter(Country == country)
fit <- lm(stock_change ~ stringency_ra +
new_cases_smoothed_per_million +
new_deaths_smoothed_per_million +
retail_and_recreation +
residential +
oil_price +
new_vaccinations_smoothed_per_million, data=country_data)
print(summary(fit))
coeff <- tidy(fit) %>%
dplyr::select(term, estimate) %>%
spread(term, estimate) %>%
mutate(region = country)
coefficients <- rbind(coefficients, coeff)
}
library(tidyverse)
library(car)
library(xtable)
library(stargazer)
library(broom)
library(ggplot2)
library(maps)
library(viridis)
library(countrycode)
library(gifski)
library(rworldmap)
library(mediation)
library(dplyr)
theme_set(theme_void())
data <- read.csv(file = "./data/all_data.csv", stringsAsFactors = FALSE)
## removed due to incomplete data
data <- data %>%
filter(!Country %in% c("ARG", "CAN", "PER", "SGP"))
countries <- unique(data$Country)
coefficients <- data.frame()
for (country in countries){
print(country)
country_data <- data %>%
filter(Country == country)
fit <- lm(stock_change ~ stringency_ra +
new_cases_smoothed_per_million +
new_deaths_smoothed_per_million +
retail_and_recreation +
residential +
oil_price +
new_vaccinations_smoothed_per_million, data=country_data)
print(summary(fit))
coeff <- tidy(fit) %>%
dplyr::select(term, estimate) %>%
spread(term, estimate) %>%
mutate(region = country)
coefficients <- rbind(coefficients, coeff)
}
View(coefficients)
View(coeff)
tidy(fit)
print(fit$p.value)
print(tidy(fit)$p.value)
## removed due to incomplete data
data <- data %>%
filter(!Country %in% c("ARG", "CAN", "PER", "SGP"))
countries <- unique(data$Country)
coefficients <- data.frame()
for (country in countries){
print(country)
country_data <- data %>%
filter(Country == country)
fit <- lm(stock_change ~ stringency_ra +
new_cases_smoothed_per_million +
new_deaths_smoothed_per_million +
retail_and_recreation +
residential +
oil_price +
new_vaccinations_smoothed_per_million, data=country_data)
print(summary(fit))
print(tidy(fit)$p.value)
coeff <- tidy(fit) %>%
dplyr::select(term, estimate) %>%
spread(term, estimate) %>%
mutate(region = country)
coefficients <- rbind(coefficients, coeff)
}
print(tidy(fit)$p.value[2])
pvals <- list()
pvals.append(tidy(fit)$p.value[2])
append(pvals, tidy(fit)$p.value[2])
data <- read.csv(file = "./data/all_data.csv", stringsAsFactors = FALSE)
## removed due to incomplete data
data <- data %>%
filter(!Country %in% c("ARG", "CAN", "PER", "SGP"))
countries <- unique(data$Country)
coefficients <- data.frame()
pvals <- list()
for (country in countries){
print(country)
country_data <- data %>%
filter(Country == country)
fit <- lm(stock_change ~ stringency_ra +
new_cases_smoothed_per_million +
new_deaths_smoothed_per_million +
retail_and_recreation +
residential +
oil_price +
new_vaccinations_smoothed_per_million, data=country_data)
print(summary(fit))
append(pvals, tidy(fit)$p.value[2])
coeff <- tidy(fit) %>%
dplyr::select(term, estimate) %>%
spread(term, estimate) %>%
mutate(region = country)
coefficients <- rbind(coefficients, coeff)
}
View(pvals)
for (country in countries){
print(country)
country_data <- data %>%
filter(Country == country)
fit <- lm(stock_change ~ stringency_ra +
new_cases_smoothed_per_million +
new_deaths_smoothed_per_million +
retail_and_recreation +
residential +
oil_price +
new_vaccinations_smoothed_per_million, data=country_data)
print(summary(fit))
append(pvals, tidy(fit)$p.value[2])
coeff <- tidy(fit) %>%
dplyr::select(term, estimate) %>%
spread(term, estimate) %>%
mutate(region = country)
coefficients <- rbind(coefficients, coeff)
}
View(pvals)
countries <- unique(data$Country)
coefficients <- data.frame()
pvals <- list()
for (country in countries){
print(country)
country_data <- data %>%
filter(Country == country)
fit <- lm(stock_change ~ stringency_ra +
new_cases_smoothed_per_million +
new_deaths_smoothed_per_million +
retail_and_recreation +
residential +
oil_price +
new_vaccinations_smoothed_per_million, data=country_data)
print(summary(fit))
append(pvals, tidy(fit)$p.value[2])
coeff <- tidy(fit) %>%
dplyr::select(term, estimate) %>%
spread(term, estimate) %>%
mutate(region = country) %>%
mutate(pval = p.value[2])
coefficients <- rbind(coefficients, coeff)
}
tidy(fit)
for (country in countries){
print(country)
country_data <- data %>%
filter(Country == country)
fit <- lm(stock_change ~ stringency_ra +
new_cases_smoothed_per_million +
new_deaths_smoothed_per_million +
retail_and_recreation +
residential +
oil_price +
new_vaccinations_smoothed_per_million, data=country_data)
print(summary(fit))
append(pvals, tidy(fit)$p.value[2])
coeff <- tidy(fit) %>%
dplyr::select(term, estimate, p.value) %>%
spread(term, estimate) %>%
mutate(region = country) %>%
coefficients <- rbind(coefficients, coeff)
}
coefficients <- data.frame()
pvals <- list()
for (country in countries){
print(country)
country_data <- data %>%
filter(Country == country)
fit <- lm(stock_change ~ stringency_ra +
new_cases_smoothed_per_million +
new_deaths_smoothed_per_million +
retail_and_recreation +
residential +
oil_price +
new_vaccinations_smoothed_per_million, data=country_data)
print(country)
print(summary(fit))
coeff <- tidy(fit) %>%
dplyr::select(term, estimate, p.value) %>%
spread(term, estimate) %>%
mutate(region = country) %>%
coefficients <- rbind(coefficients, coeff)
}
coefficients <- data.frame()
pvals <- list()
for (country in countries){
print(country)
country_data <- data %>%
filter(Country == country)
fit <- lm(stock_change ~ stringency_ra +
new_cases_smoothed_per_million +
new_deaths_smoothed_per_million +
retail_and_recreation +
residential +
oil_price +
new_vaccinations_smoothed_per_million, data=country_data)
print(country)
print(summary(fit))
coeff <- tidy(fit) %>%
dplyr::select(term, estimate) %>%
spread(term, estimate) %>%
mutate(region = country) %>%
coefficients <- rbind(coefficients, coeff)
}
coeff <- tidy(fit) %>%
dplyr::select(term, estimate) %>%
spread(term, estimate) %>%
mutate(region = country)
i
i
coefficients <- data.frame()
pvals <- list()
for (country in countries){
print(country)
country_data <- data %>%
filter(Country == country)
fit <- lm(stock_change ~ stringency_ra +
new_cases_smoothed_per_million +
new_deaths_smoothed_per_million +
retail_and_recreation +
residential +
oil_price +
new_vaccinations_smoothed_per_million, data=country_data)
print(country)
print(summary(fit))
coeff <- tidy(fit) %>%
dplyr::select(term, estimate) %>%
spread(term, estimate) %>%
mutate(region = country)
coefficients <- rbind(coefficients, coeff)
}
world_map <- map_data("world") %>%
dplyr::mutate(region = countrycode(region, origin = 'country.name', destination = 'iso3c') )
data <- read.csv(file = "./data/all_data.csv", stringsAsFactors = FALSE)
## removed due to incomplete data
data <- data %>%
filter(!Country %in% c("ARG", "CAN", "PER", "SGP"))
countries <- unique(data$Country)
coefficients <- data.frame()
pvals <- list()
for (country in countries){
country_data <- data %>%
filter(Country == country)
fit <- lm(stock_change ~ stringency_ra +
new_cases_smoothed_per_million +
new_deaths_smoothed_per_million +
retail_and_recreation +
residential +
oil_price +
new_vaccinations_smoothed_per_million, data=country_data)
fit <- lm(stock_change ~ stringency_ra + polity + frac_DPI + human_development_index + population_density + oil_price + hospital_beds_per_thousand + new_cases_smoothed_per_million + stimulus_spending_pct_gdp, data = country_data)
print(country)
print(summary(fit))
coeff <- tidy(fit) %>%
dplyr::select(term, estimate) %>%
spread(term, estimate) %>%
mutate(region = country)
coefficients <- rbind(coefficients, coeff)
}
for (country in countries){
country_data <- data %>%
filter(Country == country)
fit <- lm(stock_change ~ stringency_ra +
new_cases_smoothed_per_million +
new_deaths_smoothed_per_million +
retail_and_recreation +
residential +
oil_price +
new_vaccinations_smoothed_per_million, data=country_data)
fit <- lm(stock_change ~ stringency_ra + retail_and_recreation +
residential + oil_price + hospital_beds_per_thousand + new_cases_smoothed_per_million, data = country_data)
print(country)
print(summary(fit))
coeff <- tidy(fit) %>%
dplyr::select(term, estimate) %>%
spread(term, estimate) %>%
mutate(region = country)
coefficients <- rbind(coefficients, coeff)
}
coefficients <- data.frame()
pvals <- list()
for (country in countries){
country_data <- data %>%
filter(Country == country)
fit <- lm(stock_change ~ stringency_ra +
new_cases_smoothed_per_million +
new_deaths_smoothed_per_million +
retail_and_recreation +
residential +
oil_price +
new_vaccinations_smoothed_per_million, data=country_data)
fit <- lm(stock_change ~ stringency_ra + retail_and_recreation +
residential + oil_price + hospital_beds_per_thousand + new_cases_smoothed_per_million, data = country_data)
print(country)
print(summary(fit))
coeff <- tidy(fit) %>%
dplyr::select(term, estimate) %>%
spread(term, estimate) %>%
mutate(region = country)
coefficients <- rbind(coefficients, coeff)
}
coefficients <- data.frame()
pvals <- list()
for (country in countries){
country_data <- data %>%
filter(Country == country)
fit <- lm(stock_change ~ stringency_ra +
new_cases_smoothed_per_million +
new_deaths_smoothed_per_million +
retail_and_recreation +
residential +
oil_price +
new_vaccinations_smoothed_per_million, data=country_data)
print(country)
print(summary(fit))
coeff <- tidy(fit) %>%
dplyr::select(term, estimate) %>%
spread(term, estimate) %>%
mutate(region = country)
coefficients <- rbind(coefficients, coeff)
}
fit <- lm(stock_change ~ stringency_ra +
agriculture +
industry +
manufacturing +
services +
frac_DPI +
aged_65_older +
new_cases_smoothed_per_million +
new_deaths_smoothed_per_million +
human_development_index +
retail_and_recreation +
residential +
oil_price +
stimulus_spending_pct_gdp +
health_spending_pct_gdp +
new_vaccinations_smoothed_per_million +
gdp_per_capimta_log +
polity +
hospital_beds_per_thousand +
population_density_log
, data=data)
names(fit$coefficients) <- c("Intercept",
"Lockdown Severity",
"Agriculture Sector Share of GDP",
"Industry Sector Share of GDP",
"Manufacturing Sector Share of GDP",
"Service Sector Share of GDP",
"Political Fractionalization Index",
"Share of Population Older Than 65",
"New COVID-19 Cases Per Million People",
"New COVID-19 Deaths Per Million People",
"Human Development Index",
"Retail and Recreational Mobility",
"Residential Mobility",
"Oil Spot Price",
"Total Stimulus Spending as % of GDP",
"Healthcare Spending as % of GDP",
"New COVID-19 Vaccinations Per Million People",
"GDP Per Capita (Log)",
"Polity Score",
"Hospital Beds per 1000 People",
"Population Density (Log)")
library(tidyverse)
library( taRifx )
library(car)
library(xtable)
library(stargazer)
library(BBmisc)
library(dplyr)
data <- read.csv(file = "./data/all_data.csv", stringsAsFactors = FALSE)
data <- japply( data, which(sapply(data, typeof)=="integer"), as.double )
colnames(data)
types <- sapply(data, typeof)
types_df <- data.frame(types) %>%
arrange(types)
fit <- lm(stock_change ~ stringency_ra +
agriculture +
industry +
manufacturing +
services +
frac_DPI +
aged_65_older +
new_cases_smoothed_per_million +
new_deaths_smoothed_per_million +
human_development_index +
retail_and_recreation +
residential +
oil_price +
stimulus_spending_pct_gdp +
health_spending_pct_gdp +
new_vaccinations_smoothed_per_million +
gdp_per_capimta_log +
polity +
hospital_beds_per_thousand +
population_density_log
, data=data)
names(fit$coefficients) <- c("Intercept",
"Lockdown Severity",
"Agriculture Sector Share of GDP",
"Industry Sector Share of GDP",
"Manufacturing Sector Share of GDP",
"Service Sector Share of GDP",
"Political Fractionalization Index",
"Share of Population Older Than 65",
"New COVID-19 Cases Per Million People",
"New COVID-19 Deaths Per Million People",
"Human Development Index",
"Retail and Recreational Mobility",
"Residential Mobility",
"Oil Spot Price",
"Total Stimulus Spending as % of GDP",
"Healthcare Spending as % of GDP",
"New COVID-19 Vaccinations Per Million People",
"GDP Per Capita (Log)",
"Polity Score",
"Hospital Beds per 1000 People",
"Population Density (Log)")
fit <- lm(stock_change ~ stringency_ra +
agriculture +
industry +
manufacturing +
services +
frac_DPI +
aged_65_older +
new_cases_smoothed_per_million +
new_deaths_smoothed_per_million +
human_development_index +
retail_and_recreation +
residential +
oil_price +
stimulus_spending_pct_gdp +
health_spending_pct_gdp +
new_vaccinations_smoothed_per_million +
gdp_per_capimta_log +
polity +
hospital_beds_per_thousand +
population_density_log
, data=data)
data <- read.csv(file = "./data/all_data.csv", stringsAsFactors = FALSE)
data <- japply( data, which(sapply(data, typeof)=="integer"), as.double )
colnames(data)
types <- sapply(data, typeof)
types_df <- data.frame(types) %>%
arrange(types)
fit <- lm(stock_change ~ stringency_ra +
agriculture +
industry +
manufacturing +
services +
frac_DPI +
aged_65_older +
new_cases_smoothed_per_million +
new_deaths_smoothed_per_million +
human_development_index +
retail_and_recreation +
residential +
oil_price +
stimulus_spending_pct_gdp +
health_spending_pct_gdp +
new_vaccinations_smoothed_per_million +
gdp_per_capita_log +
polity +
hospital_beds_per_thousand +
population_density_log
, data=data)
names(fit$coefficients) <- c("Intercept",
"Lockdown Severity",
"Agriculture Sector Share of GDP",
"Industry Sector Share of GDP",
"Manufacturing Sector Share of GDP",
"Service Sector Share of GDP",
"Political Fractionalization Index",
"Share of Population Older Than 65",
"New COVID-19 Cases Per Million People",
"New COVID-19 Deaths Per Million People",
"Human Development Index",
"Retail and Recreational Mobility",
"Residential Mobility",
"Oil Spot Price",
"Total Stimulus Spending as % of GDP",
"Healthcare Spending as % of GDP",
"New COVID-19 Vaccinations Per Million People",
"GDP Per Capita (Log)",
"Polity Score",
"Hospital Beds per 1000 People",
"Population Density (Log)")
summary(fit)
xtable(summary(fit))
xtable(summary(fit))
