source('~/Documents/Joe 2020-2021/21W/QSS Project/QSS82-Team9/scripts/data_cleaning_3.R', echo=TRUE)
source('~/Documents/Joe 2020-2021/21W/QSS Project/QSS82-Team9/scripts/data_cleaning_3.R', echo=TRUE)
data <- read.csv(file = './data/google-trends-mobility-data.csv', stringsAsFactors = FALSE)
data <- read.csv(file = './data/google-trends-mobility-data.csv', stringsAsFactors = FALSE)
data <- data %>%
dplyr::rename(Country = Code) %>%
filter(Country %in% countries) %>%
mutate(Date = as.Date(Date, format="%m/%d/%y")) %>%
select(Country, Date, retail_and_recreation, residential)
source('~/Documents/Joe 2020-2021/21W/QSS Project/QSS82-Team9/scripts/data_cleaning_3.R', echo=TRUE)
View(df)
source('~/.active-rstudio-document', echo=TRUE)
View(data)
na_counts <- data %>%
group_by(Country) %>%
summarise_all(funs(sum(!is.na(.))))
View(na_counts)
na_counts <- data %>%
filter(!(Country %in% c("HKG"))) %>%
group_by(Country) %>%
summarise_all(funs(sum(!is.na(.))))
na_counts <- data %>%
filter(!(Country %in% c("HKG"))) %>%
select(-extreme_poverty)%>%
group_by(Country) %>%
summarise_all(funs(sum(!is.na(.))))
source('~/Documents/Joe 2020-2021/21W/QSS Project/QSS82-Team9/scripts/data_cleaning_3.R', echo=TRUE)
data <- read.csv(file = "./data/all_data.csv", stringsAsFactors = FALSE)
na_counts <- data %>%
filter(!(Country %in% c("HKG"))) %>%
select(-extreme_poverty)%>%
group_by(Country) %>%
summarise_all(funs(sum(!is.na(.))))
na_counts <- data %>%
filter(!(Country %in% c("HKG"))) %>%
select(-extreme_poverty, -new_tests_smoothed_per_thousand)%>%
group_by(Country) %>%
summarise_all(funs(sum(!is.na(.))))
na_counts <- data %>%
filter(!(Country %in% c("HKG", "CHN", "RUS", "ISL"))) %>%
select(-extreme_poverty, -new_tests_smoothed_per_thousand)%>%
group_by(Country) %>%
summarise_all(funs(sum(!is.na(.))))
na_counts <- data %>%
filter(!(Country %in% c("HKG", "CHN", "RUS", "ISR"))) %>%
select(-extreme_poverty, -new_tests_smoothed_per_thousand)%>%
group_by(Country) %>%
summarise_all(funs(sum(!is.na(.))))
na_counts <- data %>%
filter(!(Country %in% c("HKG", "CHN", "RUS", "ISL"))) %>%
select(-extreme_poverty, -new_tests_smoothed_per_thousand)%>%
group_by(Country) %>%
summarise_all(funs(sum(!is.na(.))))
na_counts <- data %>%
filter(!(Country %in% c("HKG", "CHN", "RUS", "ISL", "ISR"))) %>%
select(-extreme_poverty, -new_tests_smoothed_per_thousand)%>%
group_by(Country) %>%
summarise_all(funs(sum(!is.na(.))))
na_counts <- data %>%
filter(!(Country %in% c("HKG", "CHN", "RUS", "ISL", "ISR"))) %>%
select(-extreme_poverty, -new_tests_smoothed_per_thousand, -rural_pop, -urban_pop, -suburban_pop)%>%
group_by(Country) %>%
summarise_all(funs(sum(!is.na(.))))
na_counts <- data %>%
filter(!(Country %in% c("HKG", "CHN", "RUS", "ISL", "ISR"))) %>%
select(-extreme_poverty, -new_tests_smoothed_per_thousand, -rural_pop, -urban_pop, -suburban_pop, -unemployment)%>%
group_by(Country) %>%
summarise_all(funs(sum(!is.na(.))))
# Load Packages  ----------------------------------------------------------
library(tidyverse)
library(dplyr)
library(countrycode)
library(zoo)
all_files <- list.files("./data/")
files <- c()
for (file in all_files){
if(str_detect(file, ".csv")){
files <- c(files, file)
} else{
base_name <- str_split(file, "[.]")[[1]][1]
extension <- str_split(file, "[.]")[[1]][2]
csv_name <- paste(base_name, ".csv", sep="")
# If a file is not .csv, it converts it
if(!(csv_name %in% all_files) && extension %in% c("xlsx","xls")){
print("converting")
convert(paste("./data/",file, sep=""), paste("./data/",csv_name, sep=""))
files <- c(files, csv_name)
}
}
}
stock_files <-files[sapply(files, function(x) grepl("_(S|s)tock", x))]
stock_data <- data.frame(stringsAsFactors = TRUE)
for(file in stock_files){
country_data <- read.csv(file = paste("./data/", file, sep=""), stringsAsFactors = FALSE)
# Add country column if not there
if(!("Country" %in% colnames(country_data))){
country_code <- str_split(file, "_")[[1]][1]
country_data <- country_data %>%
mutate(Country = country_code)
}
stock_data <- rbind(stock_data, country_data)
}
stock_data$Date <- as.Date(stock_data$Date, format = "%m/%d/%Y")
stock_data$Adj.Close <- as.numeric(stock_data$Adj.Close)
stock_data <- stock_data %>%
group_by(Country) %>%
mutate(stock_change = 100* (Adj.Close/lag(Adj.Close) -1 )) # %>%
#   # mutate(stock_change_m2 = lag(stock_change_m1)) %>%
#   # mutate(stock_change_m3 = lag(stock_change_m2)) %>%
#   # mutate(stock_change_m4 = lag(stock_change_m3)) %>%
#   # mutate(stock_change_m5 = lag(stock_change_m4)) %>%
#   # mutate(stock_change_m6 = lag(stock_change_m5)) %>%
#   # mutate(stock_change_m7 = lag(stock_change_m6)) %>%
#   # mutate(stock_change_m8 = lag(stock_change_m7)) %>%
#   # mutate(stock_change_m9 = lag(stock_change_m8)) %>%
#   # mutate(stock_change_m10 = lag(stock_change_m9))
#
summary(stock_data$stock_change)
write.csv(stock_data,"./data/Stock_data.csv", row.names = FALSE)
# Remove stock files from list of
files <- files[sapply(files, function(x) grepl("_(S|s)tock", x)) == FALSE]
files <- files[files != "all_data.csv" & files != "Stock_data.csv"]
files <- c(files, "Stock_data.csv")
df <- data.frame(Country = character(), Date = character(), stringsAsFactors = FALSE)
df$Date <- as.Date(df$Date)
countries <- c("ARG","AUS", "AUT", "BEL", "BRA", "CAN", "CHE", "CHN", "DEU", "ESP", "FIN", "FRA", "GBR", "IDN", "IND", "IRL", "ISL", "ISR", "ITA", "KOR", "LTU", "MEX", "NLD", "NOR", "NZL", "PER", "PRT", "RUS", "SGP", "SWE", "TUR", "USA", "ZAF")
data <- read.csv(file = './data/lockdown_and_covid_rate_data.csv', stringsAsFactors = FALSE)
data <- data %>%
dplyr::rename(Country = iso_code, Date = date, covid_rate = total_cases_per_million)%>%
mutate(Date = as.Date(Date, format="%m/%d/%y")) %>%
filter(Country %in% countries) %>%
select(Country, Date, stringency_index, aged_65_older, human_development_index, median_age, life_expectancy, population_density, extreme_poverty, covid_rate, gdp_per_capita, hospital_beds_per_thousand, total_vaccinations_per_hundred, new_cases_smoothed_per_million, new_deaths_smoothed_per_million, new_tests_smoothed_per_thousand) %>%
mutate(total_vaccinations_per_hundred = if_else(is.na(total_vaccinations_per_hundred), 0, total_vaccinations_per_hundred)) %>%
group_by(Country) %>%
arrange(Date) %>%
mutate(stringency_ra = zoo::rollmean(stringency_index, k = 7, fill = NA, align = "right")) %>%
mutate(covid_log = log(covid_rate)) %>%
arrange(Country, Date)
df <- merge(x = df, y = data, by = c("Country", "Date"), all = TRUE)
df <- df %>%
mutate(Day = format(Date, format = "%d")) %>%
mutate(Month = format(Date, format = "%m")) %>%
mutate(Year = format(Date, format = "%Y")) %>%
mutate(Quarter = ifelse(as.integer(Month) %in% c(1,2,3),1, ifelse(as.integer(Month) %in% c(4,5,6),2,ifelse(as.integer(Month) %in% c(7,8,9),3,ifelse(as.integer(Month) %in% c(10,11,12),4,NA)))))
data <- read.csv(file = './data/Stock_data.csv', stringsAsFactors = FALSE)
summary(data$Date)
data <- data %>%
filter(Country %in% countries) %>%
mutate(Date = as.Date(Date)) %>%
select(Country, Date, stock_change)
df <- merge(x = df, y = data, by = c("Country", "Date"), all.x = TRUE)
df <- df %>%
mutate(Day = format(Date, format = "%d")) %>%
mutate(Month = format(Date, format = "%m")) %>%
mutate(Year = format(Date, format = "%Y"))
data <- read.csv(file = './data/google-trends-mobility-data.csv', stringsAsFactors = FALSE)
data <- data %>%
dplyr::rename(Country = Code) %>%
filter(Country %in% countries) %>%
mutate(Date = as.Date(Date, format="%m/%d/%y")) %>%
select(Country, Date, retail_and_recreation, residential)
df <- merge(x = df, y = data, by = c("Country", "Date"), all.x = TRUE)
data <- read.csv(file = './data/OECD_Population_Distribution.csv', stringsAsFactors = FALSE)
data <- data %>%
spread(SUBJECT, Value) %>%
dplyr::rename(Country = LOCATION, Date = TIME, rural_pop = RURAL, urban_pop = URBAN, suburban_pop = INTMD) %>%
filter(Country %in% countries) %>%
#mutate(Date = as.Date(Date, format = "%Y")) %>%
select(Country, rural_pop, urban_pop, suburban_pop)
df <- merge(x = df, y = data, by = c("Country"), all.x = TRUE)
data <- read.csv(file = './data/OECD_BCI.csv', stringsAsFactors = FALSE)
data <- data %>%
dplyr::rename(Country = LOCATION, Date = TIME, BCI = Value) %>%
filter(Country %in% countries) %>%
mutate(Date = as.Date(paste(Date,"-01",sep=""), format = "%Y-%m-%d")) %>%
mutate(Month = format(Date, format = "%m")) %>%
mutate(Year = format(Date, format = "%Y")) %>%
select(Country, Month, Year, BCI)
df <- merge(x = df, y = data, by = c("Country", "Month", "Year"), all.x = TRUE)
data <- read.csv(file = './data/OECD_CCI.csv', stringsAsFactors = FALSE)
data <- data %>%
dplyr::rename(Country = LOCATION, Date = TIME, CCI = Value) %>%
filter(Country %in% countries) %>%
mutate(Date = as.Date(paste(Date,"-01",sep=""), format = "%Y-%m-%d")) %>%
mutate(Month = format(Date, format = "%m")) %>%
mutate(Year = format(Date, format = "%Y")) %>%
select(Country, Month, Year, CCI)
df <- merge(x = df, y = data, by = c("Country", "Month", "Year"), all.x = TRUE)
data <- read.csv(file = './data/OECD_CLI.csv', stringsAsFactors = FALSE)
data <- data %>%
dplyr::rename(Country = LOCATION, Date = TIME, CLI = Value) %>%
filter(Country %in% countries) %>%
mutate(Date = as.Date(paste(Date,"-01",sep=""), format = "%Y-%m-%d")) %>%
mutate(Month = format(Date, format = "%m")) %>%
mutate(Year = format(Date, format = "%Y")) %>%
select(Country, Month, Year, CLI)
df <- merge(x = df, y = data, by = c("Country", "Month", "Year"), all.x = TRUE)
data <- read.csv(file = './data/OECD_Unemployment_Benefits.csv', stringsAsFactors = FALSE)
data <- data %>%
spread(SUBJECT, Value) %>%
dplyr::rename(Country = LOCATION, Date = TIME, one_yr_unemp_bene = "1YEAR", two_mth_umemp_bene ="2MTH", two_yr_unemp_bene = "2YEAR", five_yr_unemp_bene = "5YEAR", six_mth_unemp_bene = "6MTH") %>%
filter(Date == 2019) %>%
filter(Country %in% countries) %>%
select(Country, one_yr_unemp_bene, two_mth_umemp_bene, two_yr_unemp_bene, five_yr_unemp_bene, six_mth_unemp_bene )
df <- merge(x = df, y = data, by = c("Country"), all.x = TRUE)
data <- read.csv(file = './data/oil_price_data.csv', stringsAsFactors = FALSE)
data <- data %>%
dplyr::rename(oil_price = WTI_spot_price) %>%
mutate(Date = as.Date(Date, format = "%m/%d/%y")) %>%
select(Date, oil_price)
df <- merge(x = df, y = data, by = c("Date"), all.x = TRUE)
data <- read.csv(file = './data/OECD_Unemployment.csv', stringsAsFactors = FALSE)
data <- data %>%
dplyr::rename(Country = LOCATION, Date = TIME, unemployment = Value) %>%
filter(Country %in% countries) %>%
mutate(Date = as.Date(paste(Date,"-01",sep=""), format = "%Y-%m-%d")) %>%
mutate(Month = format(Date, format = "%m")) %>%
mutate(Year = format(Date, format = "%Y")) %>%
select(Country, Month, Year, unemployment)
df <- merge(x = df, y = data, by = c("Country", "Month", "Year"), all.x = TRUE)
data <- read.csv(file = './data/oil_price_data.csv', stringsAsFactors = FALSE)
# Load Packages  ----------------------------------------------------------
library(tidyverse)
library(dplyr)
library(countrycode)
library(zoo)
all_files <- list.files("./data/")
files <- c()
for (file in all_files){
if(str_detect(file, ".csv")){
files <- c(files, file)
} else{
base_name <- str_split(file, "[.]")[[1]][1]
extension <- str_split(file, "[.]")[[1]][2]
csv_name <- paste(base_name, ".csv", sep="")
# If a file is not .csv, it converts it
if(!(csv_name %in% all_files) && extension %in% c("xlsx","xls")){
print("converting")
convert(paste("./data/",file, sep=""), paste("./data/",csv_name, sep=""))
files <- c(files, csv_name)
}
}
}
stock_files <-files[sapply(files, function(x) grepl("_(S|s)tock", x))]
stock_data <- data.frame(stringsAsFactors = TRUE)
for(file in stock_files){
country_data <- read.csv(file = paste("./data/", file, sep=""), stringsAsFactors = FALSE)
# Add country column if not there
if(!("Country" %in% colnames(country_data))){
country_code <- str_split(file, "_")[[1]][1]
country_data <- country_data %>%
mutate(Country = country_code)
}
stock_data <- rbind(stock_data, country_data)
}
stock_data$Date <- as.Date(stock_data$Date, format = "%m/%d/%Y")
stock_data$Adj.Close <- as.numeric(stock_data$Adj.Close)
stock_data <- stock_data %>%
group_by(Country) %>%
mutate(stock_change = 100* (Adj.Close/lag(Adj.Close) -1 )) # %>%
#   # mutate(stock_change_m2 = lag(stock_change_m1)) %>%
#   # mutate(stock_change_m3 = lag(stock_change_m2)) %>%
#   # mutate(stock_change_m4 = lag(stock_change_m3)) %>%
#   # mutate(stock_change_m5 = lag(stock_change_m4)) %>%
#   # mutate(stock_change_m6 = lag(stock_change_m5)) %>%
#   # mutate(stock_change_m7 = lag(stock_change_m6)) %>%
#   # mutate(stock_change_m8 = lag(stock_change_m7)) %>%
#   # mutate(stock_change_m9 = lag(stock_change_m8)) %>%
#   # mutate(stock_change_m10 = lag(stock_change_m9))
#
summary(stock_data$stock_change)
write.csv(stock_data,"./data/Stock_data.csv", row.names = FALSE)
# Remove stock files from list of
files <- files[sapply(files, function(x) grepl("_(S|s)tock", x)) == FALSE]
files <- files[files != "all_data.csv" & files != "Stock_data.csv"]
files <- c(files, "Stock_data.csv")
df <- data.frame(Country = character(), Date = character(), stringsAsFactors = FALSE)
df$Date <- as.Date(df$Date)
countries <- c("ARG","AUS", "AUT", "BEL", "BRA", "CAN", "CHE", "CHN", "DEU", "ESP", "FIN", "FRA", "GBR", "IDN", "IND", "IRL", "ISL", "ISR", "ITA", "KOR", "LTU", "MEX", "NLD", "NOR", "NZL", "PER", "PRT", "RUS", "SGP", "SWE", "TUR", "USA", "ZAF")
data <- read.csv(file = './data/lockdown_and_covid_rate_data.csv', stringsAsFactors = FALSE)
data <- data %>%
dplyr::rename(Country = iso_code, Date = date, covid_rate = total_cases_per_million)%>%
mutate(Date = as.Date(Date, format="%m/%d/%y")) %>%
filter(Country %in% countries) %>%
select(Country, Date, stringency_index, aged_65_older, human_development_index, median_age, life_expectancy, population_density, extreme_poverty, covid_rate, gdp_per_capita, hospital_beds_per_thousand, total_vaccinations_per_hundred, new_cases_smoothed_per_million, new_deaths_smoothed_per_million, new_tests_smoothed_per_thousand) %>%
mutate(total_vaccinations_per_hundred = if_else(is.na(total_vaccinations_per_hundred), 0, total_vaccinations_per_hundred)) %>%
group_by(Country) %>%
arrange(Date) %>%
mutate(stringency_ra = zoo::rollmean(stringency_index, k = 7, fill = NA, align = "right")) %>%
mutate(covid_log = log(covid_rate)) %>%
arrange(Country, Date)
df <- merge(x = df, y = data, by = c("Country", "Date"), all = TRUE)
df <- df %>%
mutate(Day = format(Date, format = "%d")) %>%
mutate(Month = format(Date, format = "%m")) %>%
mutate(Year = format(Date, format = "%Y")) %>%
mutate(Quarter = ifelse(as.integer(Month) %in% c(1,2,3),1, ifelse(as.integer(Month) %in% c(4,5,6),2,ifelse(as.integer(Month) %in% c(7,8,9),3,ifelse(as.integer(Month) %in% c(10,11,12),4,NA)))))
data <- read.csv(file = './data/Stock_data.csv', stringsAsFactors = FALSE)
summary(data$Date)
data <- data %>%
filter(Country %in% countries) %>%
mutate(Date = as.Date(Date)) %>%
select(Country, Date, stock_change)
df <- merge(x = df, y = data, by = c("Country", "Date"), all.x = TRUE)
df <- df %>%
mutate(Day = format(Date, format = "%d")) %>%
mutate(Month = format(Date, format = "%m")) %>%
mutate(Year = format(Date, format = "%Y"))
data <- read.csv(file = './data/google-trends-mobility-data.csv', stringsAsFactors = FALSE)
data <- data %>%
dplyr::rename(Country = Code) %>%
filter(Country %in% countries) %>%
mutate(Date = as.Date(Date, format="%m/%d/%y")) %>%
select(Country, Date, retail_and_recreation, residential)
df <- merge(x = df, y = data, by = c("Country", "Date"), all.x = TRUE)
data <- read.csv(file = './data/OECD_Population_Distribution.csv', stringsAsFactors = FALSE)
data <- data %>%
spread(SUBJECT, Value) %>%
dplyr::rename(Country = LOCATION, Date = TIME, rural_pop = RURAL, urban_pop = URBAN, suburban_pop = INTMD) %>%
filter(Country %in% countries) %>%
#mutate(Date = as.Date(Date, format = "%Y")) %>%
select(Country, rural_pop, urban_pop, suburban_pop)
df <- merge(x = df, y = data, by = c("Country"), all.x = TRUE)
data <- read.csv(file = './data/OECD_BCI.csv', stringsAsFactors = FALSE)
data <- data %>%
dplyr::rename(Country = LOCATION, Date = TIME, BCI = Value) %>%
filter(Country %in% countries) %>%
mutate(Date = as.Date(paste(Date,"-01",sep=""), format = "%Y-%m-%d")) %>%
mutate(Month = format(Date, format = "%m")) %>%
mutate(Year = format(Date, format = "%Y")) %>%
select(Country, Month, Year, BCI)
df <- merge(x = df, y = data, by = c("Country", "Month", "Year"), all.x = TRUE)
data <- read.csv(file = './data/OECD_CCI.csv', stringsAsFactors = FALSE)
data <- data %>%
dplyr::rename(Country = LOCATION, Date = TIME, CCI = Value) %>%
filter(Country %in% countries) %>%
mutate(Date = as.Date(paste(Date,"-01",sep=""), format = "%Y-%m-%d")) %>%
mutate(Month = format(Date, format = "%m")) %>%
mutate(Year = format(Date, format = "%Y")) %>%
select(Country, Month, Year, CCI)
df <- merge(x = df, y = data, by = c("Country", "Month", "Year"), all.x = TRUE)
data <- read.csv(file = './data/OECD_CLI.csv', stringsAsFactors = FALSE)
data <- data %>%
dplyr::rename(Country = LOCATION, Date = TIME, CLI = Value) %>%
filter(Country %in% countries) %>%
mutate(Date = as.Date(paste(Date,"-01",sep=""), format = "%Y-%m-%d")) %>%
mutate(Month = format(Date, format = "%m")) %>%
mutate(Year = format(Date, format = "%Y")) %>%
select(Country, Month, Year, CLI)
df <- merge(x = df, y = data, by = c("Country", "Month", "Year"), all.x = TRUE)
data <- read.csv(file = './data/OECD_Unemployment_Benefits.csv', stringsAsFactors = FALSE)
data <- data %>%
spread(SUBJECT, Value) %>%
dplyr::rename(Country = LOCATION, Date = TIME, one_yr_unemp_bene = "1YEAR", two_mth_umemp_bene ="2MTH", two_yr_unemp_bene = "2YEAR", five_yr_unemp_bene = "5YEAR", six_mth_unemp_bene = "6MTH") %>%
filter(Date == 2019) %>%
filter(Country %in% countries) %>%
select(Country, one_yr_unemp_bene, two_mth_umemp_bene, two_yr_unemp_bene, five_yr_unemp_bene, six_mth_unemp_bene )
df <- merge(x = df, y = data, by = c("Country"), all.x = TRUE)
data <- read.csv(file = './data/oil_price_data.csv', stringsAsFactors = FALSE)
data <- data %>%
dplyr::rename(oil_price = WTI_spot_price) %>%
mutate(Date = as.Date(Date, format = "%m/%d/%y")) %>%
select(Date, oil_price)
df <- merge(x = df, y = data, by = c("Date"), all.x = TRUE)
data <- read.csv(file = './data/oil_price_data.csv', stringsAsFactors = FALSE)
data <- data %>%
dplyr::rename(oil_price = WTI_spot_price) %>%
mutate(Date = as.Date(Date, format = "%m/%d/%Y")) %>%
select(Date, oil_price)
source('~/Documents/Joe 2020-2021/21W/QSS Project/QSS82-Team9/scripts/data_cleaning_3.R', echo=TRUE)
library(tidyverse)
data <- read.csv(file = "./data/all_data.csv", stringsAsFactors = FALSE)
na_counts <- data %>%
filter(!(Country %in% c("HKG", "CHN", "RUS", "ISL", "ISR", "TUR"))) %>%
select(-extreme_poverty, -new_tests_smoothed_per_thousand, -rural_pop, -urban_pop, -suburban_pop, -unemployment)%>%
group_by(Country) %>%
summarise_all(funs(sum(!is.na(.))))
na_counts <- data %>%
filter(!(Country %in% c("HKG", "CHN", "RUS", "ISL", "ISR", "TUR"))) %>%
select(-extreme_poverty, -new_tests_smoothed_per_thousand, -rural_pop, -urban_pop, -suburban_pop, -unemployment,
-one_yr_unemp_bene, -two_mth_umemp_bene, -two_yr_unemp_bene, -six_mth_unemp_bene, -five_yr_unemp_bene)%>%
group_by(Country) %>%
summarise_all(funs(sum(!is.na(.))))
%
na_counts <- data %>%
filter(!(Country %in% c("HKG", "CHN", "RUS", "ISL", "ISR", "TUR"))) %>%
select(-extreme_poverty, -new_tests_smoothed_per_thousand, -rural_pop, -urban_pop, -suburban_pop, -unemployment,
-one_yr_unemp_bene, -two_mth_umemp_bene, -two_yr_unemp_bene, -six_mth_unemp_bene, -five_yr_unemp_bene)%>%
group_by(Country) %>%
summarise_all(funs(sum(!is.na(.)))) %>%
rowwise() %>%
mutate(num_points = min(-Country, -Date))
na_counts <- data %>%
filter(!(Country %in% c("HKG", "CHN", "RUS", "ISL", "ISR", "TUR"))) %>%
select(-extreme_poverty, -new_tests_smoothed_per_thousand, -rural_pop, -urban_pop, -suburban_pop, -unemployment,
-one_yr_unemp_bene, -two_mth_umemp_bene, -two_yr_unemp_bene, -six_mth_unemp_bene, -five_yr_unemp_bene)%>%
group_by(Country) %>%
summarise_all(funs(sum(!is.na(.)))) %>%
rowwise() %>%
mutate(num_points = min(-Country ))
na_counts <- data %>%
filter(!(Country %in% c("HKG", "CHN", "RUS", "ISL", "ISR", "TUR"))) %>%
select(-extreme_poverty, -new_tests_smoothed_per_thousand, -rural_pop, -urban_pop, -suburban_pop, -unemployment,
-one_yr_unemp_bene, -two_mth_umemp_bene, -two_yr_unemp_bene, -six_mth_unemp_bene, -five_yr_unemp_bene)%>%
group_by(Country) %>%
summarise_all(funs(sum(!is.na(.)))) %>%
mutate(num_points = pmin(colnames(data)))
na_counts <- data %>%
filter(!(Country %in% c("HKG", "CHN", "RUS", "ISL", "ISR", "TUR"))) %>%
select(-extreme_poverty, -new_tests_smoothed_per_thousand, -rural_pop, -urban_pop, -suburban_pop, -unemployment,
-one_yr_unemp_bene, -two_mth_umemp_bene, -two_yr_unemp_bene, -six_mth_unemp_bene, -five_yr_unemp_bene)%>%
group_by(Country) %>%
summarise_all(funs(sum(!is.na(.))))
na_counts$num_points<-apply(na_counts,1,FUN=min)
data_points <- sum(na_counts$num_points)
data_points <- sum(as.numeric(na_counts$num_points))
sum(as.numeric(na_counts$num_points))
na_counts <- data %>%
filter(!(Country %in% c("HKG", "CHN", "RUS", "ISL", "ISR", "TUR"))) %>%
select(-extreme_poverty, -new_tests_smoothed_per_thousand, -rural_pop, -urban_pop, -suburban_pop, -unemployment,
-one_yr_unemp_bene, -two_mth_umemp_bene, -two_yr_unemp_bene, -six_mth_unemp_bene, -five_yr_unemp_bene,
-BCI, -CLI)%>%
group_by(Country) %>%
summarise_all(funs(sum(!is.na(.))))
na_counts$num_points<-apply(na_counts,1,FUN=min)
sum(as.numeric(na_counts$num_points))
na_counts <- data %>%
filter(!(Country %in% c("HKG", "CHN", "RUS", "ISL", "ISR", "TUR"))) %>%
select(-extreme_poverty, -new_tests_smoothed_per_thousand, -rural_pop, -urban_pop, -suburban_pop, -unemployment,
-one_yr_unemp_bene, -two_mth_umemp_bene, -two_yr_unemp_bene, -six_mth_unemp_bene, -five_yr_unemp_bene,
-BCI, -CLI, -CCI)%>%
group_by(Country) %>%
summarise_all(funs(sum(!is.na(.))))
na_counts$num_points<-apply(na_counts,1,FUN=min)
sum(as.numeric(na_counts$num_points))
colnames(na_counts)
fit <- lm(stock_change ~ stringency_ra +
agriculture +
industry +
manufacturing +
services +
frac_DPI +
aged_65_older +
new_cases_smoothed_per_million +
new_deaths_smoothed_per_million +
human_development_index +
retail_and_recreation +
residential +
oil_price +
stimulus_spending_pct_gdp +
gdp_per_capita +
polity +
hospital_beds_per_thousand +
population_density
, data=data)
summary(fit)
fit <- lm(stock_change ~ stringency_ra +
agriculture +
industry +
manufacturing +
services +
frac_DPI +
aged_65_older +
new_cases_smoothed_per_million +
new_deaths_smoothed_per_million +
human_development_index +
retail_and_recreation +
residential +
oil_price +
stimulus_spending_pct_gdp +
health_spending_pct_gdp +
total_vaccinations_per_hundred +
gdp_per_capita +
polity +
hospital_beds_per_thousand +
population_density
, data=data)
summary(fit)
source('~/Documents/Joe 2020-2021/21W/QSS Project/QSS82-Team9/scripts/data_cleaning_3.R', echo=TRUE)
source('~/Documents/Joe 2020-2021/21W/QSS Project/QSS82-Team9/scripts/data_cleaning_3.R', echo=TRUE)
data <- read.csv(file = "./data/all_data.csv", stringsAsFactors = FALSE)
na_counts <- data %>%
filter(!(Country %in% c("HKG", "CHN", "RUS", "ISL", "ISR", "TUR"))) %>%
select(-extreme_poverty, -new_tests_smoothed_per_thousand, -rural_pop, -urban_pop, -suburban_pop, -unemployment,
-one_yr_unemp_bene, -two_mth_umemp_bene, -two_yr_unemp_bene, -six_mth_unemp_bene, -five_yr_unemp_bene,
-BCI, -CLI, -CCI)%>%
group_by(Country) %>%
summarise_all(funs(sum(!is.na(.))))
fit <- lm(stock_change ~ stringency_ra +
agriculture +
industry +
manufacturing +
services +
frac_DPI +
aged_65_older +
new_cases_smoothed_per_million +
new_deaths_smoothed_per_million +
human_development_index +
retail_and_recreation +
residential +
oil_price +
stimulus_spending_pct_gdp +
health_spending_pct_gdp +
new_vaccinations_smoothed_per_million +
gdp_per_capita +
polity +
hospital_beds_per_thousand +
population_density
, data=data)
summary(fit)
na_counts$num_points<-apply(na_counts,1,FUN=min)
sum(as.numeric(na_counts$num_points))
